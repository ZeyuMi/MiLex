file driver.c
1 : include
3 : <
1 : stdio
2 : .
1 : h
3 : >
1 : include
3 : <
1 : string
2 : .
1 : h
3 : >
1 : include
1 : token
2 : .
1 : h
1 : include
1 : mem
2 : .
1 : h
1 : int
1 : main
1 : int
1 : argc
1 : char
3 : *
1 : argv
1 : char
3 : *
1 : outputfilename
4 : =
1 : NULL
1 : char
3 : *
1 : inputfilenames
2 : 10
1 : int
1 : inputnum
4 : =
2 : 0
1 : if
1 : argc
3 : ==
2 : 1
1 : fprintf
1 : stderr
1 : ERROR
1 : not
1 : enough
1 : parameters
1 : n
1 : else
1 : while
3 : --
1 : argc
3 : >
2 : 0
1 : char
3 : *
1 : param
4 : =
3 : *
3 : ++
1 : argv
1 : if
1 : strcmp
1 : param
3 : -
1 : o
3 : ==
2 : 0
1 : argc
3 : --
1 : outputfilename
4 : =
1 : alloc
1 : strlen
3 : *
3 : ++
1 : argv
3 : +
2 : 1
1 : strcpy
1 : outputfilename
3 : *
1 : argv
1 : else
3 : *
1 : inputfilenames
3 : +
1 : inputnum
4 : =
1 : alloc
1 : strlen
1 : param
3 : +
2 : 1
1 : strcpy
3 : *
1 : inputfilenames
3 : +
1 : inputnum
1 : param
1 : inputnum
3 : ++
1 : FILE
3 : *
1 : outputfile
4 : =
1 : NULL
1 : if
1 : outputfilename
3 : ==
1 : NULL
1 : outputfile
4 : =
1 : stdout
1 : else
1 : outputfile
4 : =
1 : fopen
1 : outputfilename
1 : w
1 : int
1 : i
4 : =
2 : 0
1 : while
1 : i
3 : <
1 : inputnum
1 : char
3 : *
1 : filename
4 : =
3 : *
1 : inputfilenames
3 : +
1 : i
1 : FILE
3 : *
1 : file
4 : =
1 : fopen
1 : filename
1 : r
1 : int
1 : tokenname
1 : fprintf
1 : outputfile
1 : file
3 : %
1 : s
1 : n
1 : filename
1 : setIn
1 : file
1 : while
1 : tokenname
4 : =
1 : getToken
4 : =
1 : EOF
1 : fprintf
1 : outputfile
3 : %
1 : d
3 : %
1 : s
1 : n
1 : tokenname
1 : token
1 : unsetIn
1 : fclose
1 : file
1 : afree
1 : filename
1 : i
3 : ++
1 : afree
1 : outputfilename
1 : fclose
1 : outputfile
1 : return
2 : 0
file mem.h
1 : define
1 : ALLOCSIZE
2 : 10000
1 : char
3 : *
1 : alloc
1 : int
1 : void
1 : afree
1 : char
3 : *
file mem.c
1 : include
1 : mem
2 : .
1 : h
1 : static
1 : char
1 : allocbuf
1 : ALLOCSIZE
1 : static
1 : char
3 : *
1 : allocp
4 : =
1 : allocbuf
1 : char
3 : *
1 : alloc
1 : int
1 : n
1 : if
1 : allocbuf
3 : +
1 : ALLOCSIZE
3 : -
1 : allocp
3 : >=
1 : n
1 : allocp
3 : +=
1 : n
1 : return
1 : allocp
3 : -
1 : n
1 : else
1 : return
2 : 0
1 : void
1 : afree
1 : char
3 : *
1 : p
1 : if
1 : p
3 : >
1 : allocbuf
1 : p
3 : <
1 : allocbuf
3 : +
1 : ALLOCSIZE
1 : allocp
4 : =
1 : p
file token.c
1 : include
3 : <
1 : stdio
2 : .
1 : h
3 : >
1 : include
3 : <
1 : ctype
2 : .
1 : h
3 : >
1 : include
1 : token
2 : .
1 : h
1 : define
1 : BUFSIZE
2 : 100
1 : FILE
3 : *
1 : in
1 : void
1 : setIn
1 : FILE
3 : *
1 : inputFile
1 : in
4 : =
1 : inputFile
1 : void
1 : unsetIn
1 : in
4 : =
1 : NULL
1 : enum
1 : states
1 : STATE0
4 : =
2 : 1
1 : STATE1
1 : STATE2
1 : STATE3
1 : STATE4
1 : STATE5
1 : STATE6
1 : STATE7
1 : STATE8
1 : STATE9
1 : STATE10
1 : STATE11
1 : STATE12
1 : STATE13
1 : STATE14
1 : STATE15
1 : STATE16
1 : STATE17
1 : int
1 : state
4 : =
1 : STATE0
1 : int
1 : getch
1 : void
1 : ungetch
1 : int
1 : void
1 : error
1 : char
1 : token
1 : TOKENSIZE
1 : int
1 : getToken
1 : state
4 : =
1 : STATE0
1 : char
3 : *
1 : p
4 : =
1 : token
1 : while
2 : 1
1 : int
1 : c
4 : =
1 : getch
1 : if
1 : c
3 : ==
1 : EOF
1 : return
1 : c
1 : switch
1 : state
1 : case
1 : STATE0
1 : if
1 : c
3 : ==
3 : /
1 : state
4 : =
1 : STATE1
1 : else
1 : if
1 : c
3 : ==
1 : c
3 : ==
1 : t
1 : state
4 : =
1 : STATE8
1 : else
1 : if
1 : c
3 : ==
1 : _
1 : isalpha
1 : c
1 : state
4 : =
1 : STATE9
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : isdigit
1 : c
1 : state
4 : =
1 : STATE10
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
2 : .
1 : state
4 : =
1 : STATE11
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE12
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
3 : >
1 : state
4 : =
1 : STATE13
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
3 : <
1 : state
4 : =
1 : STATE14
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
3 : +
1 : state
4 : =
1 : STATE15
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
3 : -
1 : state
4 : =
1 : STATE16
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
3 : *
1 : c
3 : ==
3 : %
1 : state
4 : =
1 : STATE17
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : state
4 : =
1 : STATE0
1 : break
1 : case
1 : STATE1
1 : if
1 : c
3 : ==
3 : *
1 : state
4 : =
1 : STATE2
1 : else
1 : if
1 : c
3 : ==
3 : /
1 : state
4 : =
1 : STATE3
1 : else
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE17
3 : *
1 : p
3 : ++
4 : =
3 : /
3 : *
1 : p
3 : ++
4 : =
4 : =
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
3 : /
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : case
1 : STATE2
1 : if
1 : c
3 : ==
3 : *
1 : state
4 : =
1 : STATE4
1 : else
1 : state
4 : =
1 : STATE2
1 : break
1 : case
1 : STATE3
1 : if
1 : c
3 : ==
1 : n
1 : state
4 : =
1 : STATE0
1 : else
1 : state
4 : =
1 : STATE3
1 : break
1 : case
1 : STATE4
1 : if
1 : c
3 : ==
3 : *
1 : state
4 : =
1 : STATE4
1 : else
1 : if
1 : c
3 : ==
3 : /
1 : state
4 : =
1 : STATE0
1 : else
1 : state
4 : =
1 : STATE2
1 : break
1 : case
1 : STATE5
1 : break
1 : case
1 : STATE6
1 : break
1 : case
1 : STATE7
1 : break
1 : case
1 : STATE8
1 : if
1 : c
3 : ==
1 : c
3 : ==
1 : t
1 : state
4 : =
1 : STATE8
1 : else
1 : state
4 : =
1 : STATE0
1 : ungetch
1 : c
1 : break
1 : case
1 : STATE9
1 : if
1 : c
3 : ==
1 : _
1 : isalnum
1 : c
1 : state
4 : =
1 : STATE9
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : ID
1 : break
1 : case
1 : STATE10
1 : if
1 : isdigit
1 : c
1 : state
4 : =
1 : STATE10
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : if
1 : c
3 : ==
2 : .
1 : state
4 : =
1 : STATE11
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : NUMBER
1 : break
1 : case
1 : STATE11
1 : if
1 : isdigit
1 : c
1 : state
4 : =
1 : STATE11
3 : *
1 : p
3 : ++
4 : =
1 : c
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : NUMBER
1 : break
1 : case
1 : STATE12
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : ASSIGNMENT
1 : break
1 : case
1 : STATE13
1 : if
1 : c
3 : ==
3 : >
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : case
1 : STATE14
1 : if
1 : c
3 : ==
3 : <
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : case
1 : STATE15
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : if
1 : c
3 : ==
3 : +
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : case
1 : STATE16
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : if
1 : c
3 : ==
3 : -
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : case
1 : STATE17
1 : if
1 : c
3 : ==
4 : =
1 : state
4 : =
1 : STATE0
3 : *
1 : p
3 : ++
4 : =
1 : c
3 : *
1 : p
4 : =
2 : 0
1 : return
1 : OP
1 : else
1 : state
4 : =
1 : STATE0
3 : *
1 : p
4 : =
2 : 0
1 : ungetch
1 : c
1 : return
1 : OP
1 : break
1 : default
1 : error
1 : void
1 : error
1 : printf
1 : ERROR
1 : entering
1 : wrong
1 : state
1 : n
1 : char
1 : buf
1 : BUFSIZE
1 : int
1 : bufp
4 : =
2 : 0
1 : int
1 : getch
1 : return
1 : bufp
3 : >
2 : 0
1 : buf
1 : bufp
3 : --
1 : getc
1 : in
1 : void
1 : ungetch
1 : int
1 : c
1 : if
1 : bufp
3 : >=
1 : BUFSIZE
3 : -
2 : 1
1 : printf
1 : ERROR
1 : buffer
1 : is
1 : full
1 : n
1 : else
1 : buf
3 : ++
1 : bufp
4 : =
1 : c
file token.h
1 : define
1 : ID
2 : 1
1 : define
1 : NUMBER
2 : 2
1 : define
1 : OP
2 : 3
1 : define
1 : ASSIGNMENT
2 : 4
1 : define
1 : TOKENSIZE
2 : 100
1 : void
1 : setIn
1 : FILE
3 : *
1 : void
1 : unsetIn
1 : int
1 : getToken
1 : extern
1 : char
1 : token
1 : TOKENSIZE
